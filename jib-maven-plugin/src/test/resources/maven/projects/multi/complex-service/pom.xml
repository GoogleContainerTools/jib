<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>complex-service</artifactId>
  <version>1.0.0.TEST-SNAPSHOT</version>

  <parent>
    <groupId>com.jib.test</groupId>
    <artifactId>multimodule</artifactId>
    <version>1.0.0.TEST-SNAPSHOT</version>
  </parent>

  <build>
    <plugins>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <configuration>
          <extraDirectories>
            <paths>
              <path>src/main/jib1</path> <!-- should resolve to this projectRoot -->
              <path>${project.basedir}/src/main/jib2</path> <!-- provided as absolute within project -->
              <path>/some/random/absolute/path/jib3</path> <!-- provided as absolute outside of project -->
            </paths>
          </extraDirectories>
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources1</directory>
      </resource>
      <resource>
        <directory>src/main/resources2</directory>
      </resource>
    </resources>
  </build>

  <profiles>
    <profile>
      <id>localJib</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals><goal>dockerBuild</goal></goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>remoteJib</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals><goal>build</goal></goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!-- The fake remote repo contains one tiny test library installed with
    mvn org.apache.maven.plugins:maven-install-plugin:2.3.1:install-file \
        -Dfile=tiny.jar -DlocalRepositoryPath=fake-remote-repo/ \
        -DgroupId=com.google.cloud.tools -DartifactId=tiny-test-lib \
        -Dversion=0.0.1-SNAPSHOT -Dpackaging=jar

    it will be treated as a remote dependency and copied into the user's local
    maven repository.
   -->
  <repositories>
    <repository>
      <id>fake-remote-repo</id>
      <url>file:${project.basedir}/fake-remote-repo</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>com.jib.test</groupId>
      <artifactId>lib</artifactId>
      <version>1.0.0.TEST-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.cloud.tools</groupId>
      <artifactId>tiny-test-lib</artifactId>
      <version>0.0.1-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
</project>
