apiVersion: jib/v1alpha1
kind: Buildfile

# "FROM" with detail for manifest lists or multiple architectures
from:
  image: "gcr.io/distroless/java:8"
  # optional: if missing, then defaults to `linux/amd64`
  platforms:
    - architecture: "arm"
      os: "linux"
      os.version: "a"
      os.features:
        - "b1"
        - "b2"
      variant: "c"
      features:
        - "d1"
        - "d2"
    - architecture: amd64
      os: darwin

# potentially simple form of "FROM" (based on ability to define schema)
# from: "gcr.io/distroless/java:8"

creationTime: 0 # millis since epoch or iso8601 creation time
format: Docker # Docker or OCI

environment:
  "MY_KEY1": "value"
  "MY_KEY2": "value"
labels:
  "com.example.owner": "person"
  "com.example.mode": "dev"
volumes:
  - "/myvolume"
  - "/youvolume"

exposedPorts:
  - "123/udp"
  - "456"
  - "789/tcp"

user: root
workingDirectory: "/somewhere"
entrypoint:
  - "java"
  - "-jar"
cmd:
  - "myjar.jar"

layers:
  properties:
    # file properties applied to all layers
    filePermissions: "644"
    directoryPermissions: "755"
    user: "0"
    group: "0"
    timestamp: "0"
  entries:
    - name: "scripts and classes"
      # file properties only applied to this layer "scripts and classes"
      properties:
        filePermissions: "333"
        directoryPermissions: "777"
        user: "goose"
        group: "3"
        timestamp: "2020-06-03T19:31:50+00:00"
      files:
        - src: "target/scripts"
          dest: "/app/scripts"
          # file properties only applied to this copy directive
          properties:
            filePermissions: "777"
          # another copy for the same layer, with includes and excludes
        - src: "target/classes"
          dest: "/app/classes"
          excludes:
            - "**/goose.class"
            - "**/moose.class"
          includes:
            - "**/*.class"

      # another layer, only globally defined file permissions are applied here
    - name: "other"
      files:
        - src: "build/other"
          dest: "/app"

      # a archive layer using a tar, default mediaType
    - name: "some tar layer"
      archive: "build/generated.tar"

      # a foreign layer using the optional mediatype for archive layers
    - name: "some foreign layer"
      mediaType: "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip"
      archive: "https://somewhere.com/layer"
