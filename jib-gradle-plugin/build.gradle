plugins {
  id 'java-gradle-plugin'
  id 'net.researchgate.release'
  id 'com.gradle.plugin-publish'
  // for local build/test
  id 'maven'
  // for eclipse import modifications
  id 'eclipse'
}

repositories {
  // because gradle plugin dependencies are pulling from jcenter
  jcenter()
}

dependencies {
  sourceProject project(":jib-core")
  sourceProject project(":jib-plugins-common")

  testImplementation "junit:junit:${dependencyVersions.JUNIT}"
  testImplementation "org.mockito:mockito-core:${dependencyVersions.MOCKITO_CORE}"
  testImplementation "org.slf4j:slf4j-api:${dependencyVersions.SLF4J_API}"
  testImplementation "com.github.stefanbirkner:system-rules:${dependencyVersions.SYSTEM_RULES}"

  testImplementation project(path:':jib-plugins-common', configuration:'tests')
  integrationTestImplementation project(path:':jib-core', configuration:'integrationTests')

  // only for testing a concrete Spring Boot example in a test (not for test infrastructure)
  testImplementation 'org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE'
}

/* RELEASE */
// Prepare release
release {
  tagTemplate = 'v$version-gradle'
  ignoredSnapshotDependencies = [
    'com.google.cloud.tools:jib-core',
    'com.google.cloud.tools:jib-plugins-common',
  ]
  git {
    requireBranch = /^gradle_release_v\d+.*$/  //regex
  }
}
// Gradle Plugin Portal releases
pluginBundle {
  website = 'https://github.com/GoogleContainerTools/jib/'
  vcsUrl = 'https://github.com/GoogleContainerTools/jib/'

  plugins {
    jibPlugin {
      id = 'com.google.cloud.tools.jib'
      displayName = 'Jib'
      description = 'Containerize your Java application'
      tags = ['google', 'java', 'containers', 'docker', 'kubernetes', 'microservices']
    }
  }
}
tasks.publishPlugins.dependsOn integrationTest
/* RELEASE */

/* ECLIPSE */
eclipse.classpath.file.whenMerged { cp ->
  cp.entries.each {
    if (it.path == 'src/test/resources' || it.path == 'src/integration-test/resources') {
      it.excludes += 'gradle/projects/'
    }
  }
}
/* ECLIPSE */
